//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeesViewer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class testEntities : DbContext
    {
        public testEntities()
            : base("name=testEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<deps> deps { get; set; }
        public DbSet<persons> persons { get; set; }
        public DbSet<posts> posts { get; set; }
        public DbSet<status> status { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<GetEmployeesList_Result> GetEmployeesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeesList_Result>("GetEmployeesList");
        }
    
        public virtual ObjectResult<GetEmpsStats_Result> GetEmpsStats(Nullable<System.DateTime> per_begin, Nullable<System.DateTime> per_end, string need_status, Nullable<int> hire_status)
        {
            var per_beginParameter = per_begin.HasValue ?
                new ObjectParameter("per_begin", per_begin) :
                new ObjectParameter("per_begin", typeof(System.DateTime));
    
            var per_endParameter = per_end.HasValue ?
                new ObjectParameter("per_end", per_end) :
                new ObjectParameter("per_end", typeof(System.DateTime));
    
            var need_statusParameter = need_status != null ?
                new ObjectParameter("need_status", need_status) :
                new ObjectParameter("need_status", typeof(string));
    
            var hire_statusParameter = hire_status.HasValue ?
                new ObjectParameter("hire_status", hire_status) :
                new ObjectParameter("hire_status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpsStats_Result>("GetEmpsStats", per_beginParameter, per_endParameter, need_statusParameter, hire_statusParameter);
        }
    }
}
